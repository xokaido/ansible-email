---
- name: Set MySQL root password before installing
  debconf: name='mysql-server' question='mysql-server/root_password' value='Ra7q7gAUeaepD7nL' vtype='password'
  when: ansible_os_family == "Debian"
  

- name: Confirm MySQL root password before installing
  debconf: name='mysql-server' question='mysql-server/root_password_again' value='Ra7q7gAUeaepD7nL' vtype='password'
  when: ansible_os_family == "Debian"

- name: Install MariaDB repository
  apt_repository: repo='deb http://ftp.igh.cnrs.fr/pub/mariadb/repo/10.0/debian wheezy main' state=present
  when: ansible_os_family == "Debian"

- name: Install MariaDB Server and Client
  apt: package={{ item }} state=latest force=yes cache_valid_time=3600
  with_items:
    - mariadb-server
    - mariadb-client
    - python-mysqldb
  when: ansible_os_family == "Debian"

- name: Add official MariaDB repository
  yum_repository:
    name: MariaDB
    description: Official MariaDB repository
    baseurl: "http://yum.mariadb.org/10.1/centos7-amd64"
    gpgkey: https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
    gpgcheck: yes
  when:
    - ansible_distribution == "CentOS"

- name: Install MariaDB Server and Client
  package:
    name: "{{ item }}"
    state: installed
  with_items:
    - MariaDB
    - MariaDB-server
    - MySQL-python
  when:
    - ansible_distribution == "CentOS"

- name: Starting and enabling mysql service
  service: name=mysql state=started enabled=yes


- name: Copying my.cnf file to /root/
  copy: src=home-my.cnf dest=/root/.my.cnf owner=root mode=0640

- name: Ensuring mariaDB only listens to localhost
  lineinfile: 
    dest: /etc/mysql/my.cnf
    insertafter: '\[mysqld\]'
    line: 'bind-address = 127.0.0.1'
  when: ansible_os_family == "Debian"
  notify: restart mariadb

- name: Ensuring mariaDB only listens to localhost
  lineinfile: 
    dest: /etc/my.cnf.d/server.cnf
    insertafter: '\[mysqld\]'
    line: 'bind-address = 127.0.0.1'
  when:
    - ansible_distribution == "CentOS"
  notify: restart mariadb


- name: Changing the MySQL root user password
  mysql_user:
    login_user: root
    # login_password: ''
    name: "{{ item.user }}"
    password: "{{ item.pass}}"
  with_items: "{{ db }}"

- name: Creating a new database for mails
  mysql_db:
    name: "{{ mail_db_database }}"
    state: present

- name: Adding mail user and setting its password
  mysql_user:
    login_user: "{{ item.user }}"
    login_password: "{{ item.pass }}"
    name: "{{ mail_db_username }}"
    password: "{{ mail_db_password }}"
    priv: "{{ mail_db_database }}.*:ALL"
  with_items: "{{ db }}"

- name: Copying DB dump for mail
  template: src=dump.sql dest=/tmp/dump.sql

- name: Importing data into the mail DB
  mysql_db:
    name: "{{ mail_db_database }}"
    state: import
    target: /tmp/dump.sql

- name: Creating domain records in mail database
  shell: mysql {{ mail_db_database }} -e "INSERT INTO domains(name) VALUES ( '{{ item.name }}' ); INSERT INTO users(domain_id, password, email ) VALUES ( 1, ENCRYPT( '{{ item.pass}}' ), '{{ item.email }}' )"
  with_items: "{{ domains }}"
